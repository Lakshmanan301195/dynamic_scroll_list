{"version":3,"sources":["components/LayoutItem/LayoutItem.js","components/Layout/Layout.js","redux/actions/actions.js","components/Header/Header.js","pages/MainScreen/MainScreen.js","App.js","reportWebVitals.js","redux/reducers/dataReducer.js","index.js"],"names":["LayoutItem","index","image","name","className","src","onError","e","target","onerror","loading","alt","length","behavior","id","direction","Layout","dispatch","useDispatch","useSelector","state","pageNumber","filteredItems","fetchingData","currentPage","movieData","useEffect","fetchMoreData","a","fetch","then","res","json","data","list","title","page","content","type","contentItems","catch","err","console","log","dataLength","next","hasMore","map","element","Header","searchInput","style","placeholder","value","onChange","MainScreen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","contentLength","store","createStore","action","initialScroll","searchData","JSON","parse","stringify","regexp","RegExp","searchValue","filteredData","filter","test","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15edb774.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LayoutItem.css';\n\nfunction LayoutItem({index, image, name}) {\n    return (\n        <div key={index} className=\"layout-item\">\n            <img\n                src={`/Slices/${image}`}\n                onError={(e) => {\n                e.target.onerror = null;\n                e.target.src =\n                    \"/Slices/placeholder_for_missing_posters.png\";\n                }}\n                loading={\"lazy\"}\n                alt=\"movie\"\n            />\n            <br />\n            {\n                name.length > 15 ? \n                <marquee behavior=\"scroll\" id=\"marquee\" direction=\"left\">{name}</marquee> : \n                <span>{name}</span>\n            }\n        </div>\n    )\n}\n\nexport default LayoutItem\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport LayoutItem from '../LayoutItem/LayoutItem.js';\n\nimport {fetchListAction} from '../../redux/actions/actions';\n\nimport \"./Layout.css\";\n\nfunction Layout() {\n\n  const dispatch = useDispatch();\n\n  const [currentPage, movieData, fetchingData] = useSelector(\n    (state) => [\n      state.pageNumber,\n      state.filteredItems,\n      state.fetchingData\n    ]\n  );\n\n  useEffect(() => {\n    fetchMoreData();\n  }, []);\n\n  const fetchMoreData = async () => {\n    if (fetchingData === true) {\n      await fetch(`/data/CONTENTLISTINGPAGE-PAGE${currentPage + 1}.json`)\n        .then(function (res) {\n          return res.json();\n        })\n        .then(function (data) {\n          dispatch(fetchListAction(data.page[\"content-items\"].content, data.page.title));\n        })\n        .catch(function (err) {\n          console.log(err, \" error\");\n        });\n    }\n  };\n\n  return (\n    <>\n      <InfiniteScroll\n        dataLength={movieData.length}\n        next={fetchMoreData}\n        hasMore={true}\n      >\n        <div className=\"layout\">\n          {movieData &&\n            movieData.map((element, index) => (\n              <LayoutItem key={index} name={element.name} image={element[\"poster-image\"]} />\n            ))}\n        </div>\n      </InfiniteScroll>\n    </>\n  );\n}\n\nexport default Layout;\n","export const searchAction = (value) => {\n    return { \"type\": \"SEARCH\", \"searchValue\": value };\n};\n\nexport const fetchListAction = (list, title) => {\n    return {\n        type: \"NEW-DATA\",\n        contentItems: list,\n        title: title\n      };\n};","import React from 'react';\n\nimport './Header.css';\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {searchAction} from \"../../redux/actions/actions\";\n\nfunction Header() {\n\n    const dispatch = useDispatch();\n\n    const [searchInput, title] = useSelector(\n        (state) => [\n        state.searchInput,\n        state.title\n        ]\n    );\n\n    return (\n        <div className=\"navBar\" style={{'backgroundImage': \"url('/Slices/nav_bar.png')\"}}>\n            <div className=\"topHeader\">\n                <img className=\"backButton\" src=\"/Slices/Back.png\" alt=\"back\"/>\n                <span className=\"title\">{title}</span>\n                <span className=\"search\">\n                    <img src=\"/Slices/search.png\" alt=\"search\"/>\n                </span>\n                \n            </div>\n            \n            <input\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search Movie List\"\n                className=\"inputText\"\n                value={searchInput}\n                onChange={(e) =>\n                    dispatch(searchAction(e.target.value))\n                }\n            />\n      </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\n\nimport Layout from \"../../components/Layout/Layout\";\n\nimport Header from \"../../components/Header/Header\";\n\nfunction MainScreen() {\n    return (\n        <>\n            <Header />\n            <Layout />\n        </>\n    )\n}\n\nexport default MainScreen\n","import MainScreen from './pages/MainScreen/MainScreen.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <MainScreen />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    pageNumber: 0,\n    contentLength: 0,\n    contentItems: [],\n    filteredItems: [],\n    fetchingData: true,\n    searchInput: '',\n    title: ''\n};\n\nexport const dataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"NEW-DATA\":\n            \n            return {\n                ...state, \n                fetchingData: action.contentItems.length === 20 ? true : false, \n                pageNumber: state.pageNumber + 1, \n                title: action.title,\n                initialScroll: false,\n                contentItems: [ ...state.contentItems, ...action.contentItems],\n                filteredItems: [ ...state.contentItems, ...action.contentItems]\n            }\n        \n        case \"SEARCH\":\n            let searchData = JSON.parse(JSON.stringify(state.contentItems));\n            const regexp = new RegExp(action.searchValue, 'i');\n            let filteredData = searchData.filter(({name}) => regexp.test(name));\n            \n            return {\n                ...state, \n                searchInput: action.searchValue,\n                filteredItems: filteredData\n            }\n\n        default: \n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\n\nimport {dataReducer} from \"./redux/reducers/dataReducer.js\"\n\nconst store = createStore(dataReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}